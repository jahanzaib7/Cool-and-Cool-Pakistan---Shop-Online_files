{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\src\\\\components\\\\collection\\\\common\\\\ImageGrid.jsx\";\nimport React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nvar NetflixLoader = function NetflixLoader(props) {\n  // Get values from props\n  // const { rows, columns, coverHeight, coverWidth, padding, speed } = props;\n  // Hardcoded values\n  var rows = 5;\n  var columns = 4;\n  var coverHeight = 250;\n  var coverWidth = 200;\n  var padding = 20;\n  var speed = 1;\n  var coverHeightWithPadding = coverHeight + padding;\n  var coverWidthWithPadding = coverWidth + padding;\n  var initial = 10;\n  var covers = Array(columns * rows).fill(1);\n  return React.createElement(ContentLoader, Object.assign({\n    speed: speed,\n    width: columns * coverWidthWithPadding,\n    height: rows * coverHeightWithPadding,\n    primaryColor: \"#242b34\",\n    secondaryColor: \"#343d4c\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), covers.map(function (g, i) {\n    var vy = Math.floor(i / columns) * coverHeightWithPadding + initial;\n    var vx = i * coverWidthWithPadding % (columns * coverWidthWithPadding);\n    return React.createElement(\"rect\", {\n      key: i,\n      x: vx,\n      y: vy,\n      rx: \"0\",\n      ry: \"0\",\n      width: coverWidth,\n      height: coverHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }));\n};\n\nNetflixLoader.metadata = {\n  name: 'Pratik Pathak',\n  github: 'PathakPratik',\n  description: 'Netflix Style Dynamic',\n  filename: 'Netflix'\n};\nexport default NetflixLoader;","map":{"version":3,"sources":["C:\\Users\\D8\\Desktop\\Cool and Cool Pakistan - Shop Online_files\\src\\components\\collection\\common\\ImageGrid.jsx"],"names":["React","ContentLoader","NetflixLoader","props","rows","columns","coverHeight","coverWidth","padding","speed","coverHeightWithPadding","coverWidthWithPadding","initial","covers","Array","fill","map","g","i","vy","Math","floor","vx","metadata","name","github","description","filename"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC7B;AACA;AAEA;AACA,MAAMC,IAAI,GAAG,CAAb;AACA,MAAMC,OAAO,GAAG,CAAhB;AACA,MAAMC,WAAW,GAAG,GAApB;AACA,MAAMC,UAAU,GAAG,GAAnB;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,KAAK,GAAG,CAAd;AAEA,MAAMC,sBAAsB,GAAGJ,WAAW,GAAGE,OAA7C;AACA,MAAMG,qBAAqB,GAAGJ,UAAU,GAAGC,OAA3C;AACA,MAAMI,OAAO,GAAG,EAAhB;AACA,MAAMC,MAAM,GAAGC,KAAK,CAACT,OAAO,GAAGD,IAAX,CAAL,CAAsBW,IAAtB,CAA2B,CAA3B,CAAf;AAEA,SACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,KAAK,EAAEJ,OAAO,GAAGM,qBAFnB;AAGE,IAAA,MAAM,EAAEP,IAAI,GAAGM,sBAHjB;AAIE,IAAA,YAAY,EAAC,SAJf;AAKE,IAAA,cAAc,EAAC;AALjB,KAMMP,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASGU,MAAM,CAACG,GAAP,CAAW,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACpB,QAAIC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAGb,OAAf,IAA0BK,sBAA1B,GAAmDE,OAA5D;AACA,QAAIU,EAAE,GAAIJ,CAAC,GAAGP,qBAAL,IAA+BN,OAAO,GAAGM,qBAAzC,CAAT;AACA,WACE;AACE,MAAA,GAAG,EAAEO,CADP;AAEE,MAAA,CAAC,EAAEI,EAFL;AAGE,MAAA,CAAC,EAAEH,EAHL;AAIE,MAAA,EAAE,EAAC,GAJL;AAKE,MAAA,EAAE,EAAC,GALL;AAME,MAAA,KAAK,EAAEZ,UANT;AAOE,MAAA,MAAM,EAAED,WAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GAdA,CATH,CADF;AA2BD,CA5CD;;AA8CAJ,aAAa,CAACqB,QAAd,GAAyB;AACvBC,EAAAA,IAAI,EAAE,eADiB;AAEvBC,EAAAA,MAAM,EAAE,cAFe;AAGvBC,EAAAA,WAAW,EAAE,uBAHU;AAIvBC,EAAAA,QAAQ,EAAE;AAJa,CAAzB;AAOA,eAAezB,aAAf","sourcesContent":["import React from 'react'\nimport ContentLoader from 'react-content-loader'\n\nconst NetflixLoader = props => {\n  // Get values from props\n  // const { rows, columns, coverHeight, coverWidth, padding, speed } = props;\n\n  // Hardcoded values\n  const rows = 5\n  const columns = 4\n  const coverHeight = 250\n  const coverWidth = 200\n  const padding = 20\n  const speed = 1\n\n  const coverHeightWithPadding = coverHeight + padding\n  const coverWidthWithPadding = coverWidth + padding\n  const initial = 10\n  const covers = Array(columns * rows).fill(1)\n\n  return (\n    <ContentLoader\n      speed={speed}\n      width={columns * coverWidthWithPadding}\n      height={rows * coverHeightWithPadding}\n      primaryColor=\"#242b34\"\n      secondaryColor=\"#343d4c\"\n      {...props}\n    >\n  \n      {covers.map((g, i) => {\n        let vy = Math.floor(i / columns) * coverHeightWithPadding + initial\n        let vx = (i * coverWidthWithPadding) % (columns * coverWidthWithPadding)\n        return (\n          <rect\n            key={i}\n            x={vx}\n            y={vy}\n            rx=\"0\"\n            ry=\"0\"\n            width={coverWidth}\n            height={coverHeight}\n          />\n        )\n      })}\n    </ContentLoader>\n  )\n}\n\nNetflixLoader.metadata = {\n  name: 'Pratik Pathak',\n  github: 'PathakPratik',\n  description: 'Netflix Style Dynamic',\n  filename: 'Netflix',\n}\n\nexport default NetflixLoader"]},"metadata":{},"sourceType":"module"}