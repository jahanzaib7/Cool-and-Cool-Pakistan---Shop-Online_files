{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\src\\\\components\\\\pages\\\\contact.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport store from '../../store';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { SendContact, getContactDetail } from '../../actions';\n\nvar Contact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contact, _Component);\n\n  function Contact(props) {\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Contact).call(this, props));\n\n    _this.setStateFromInput = function (event) {\n      var obj = {};\n      obj[event.target.name] = event.target.value;\n\n      _this.setState(obj);\n    };\n\n    _this.SubmitContact = function () {\n      if (_this.validator.allValid()) {\n        var data = {\n          \"UserId\": _this.state.UserID,\n          \"Message\": _this.state.Message,\n          \"Name\": _this.state.FirstName + _this.state.LastName,\n          \"Phone\": _this.state.Phone,\n          \"Email\": _this.state.Email\n        };\n        store.dispatch(SendContact(data));\n      } else {\n        _this.validator.showMessages(); // rerender to show messages for the first time\n\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      \"FirstName\": '',\n      \"LastName\": '',\n      \"Phone\": '',\n      \"Email\": '',\n      \"Message\": '',\n      \"UserID\": ''\n    };\n    _this.validator = new SimpleReactValidator();\n    store.dispatch(getContactDetail());\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      store.dispatch(getContactDetail());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          contactDetails = _this$props.contactDetails,\n          country = _this$props.country;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        class: \" contact-page section-b-space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row section-b-space\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-lg-7 map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        src: contactDetails[country][0].Location,\n        allowFullScreen: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"col-lg-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"contact-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"contact-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"\".concat(process.env.PUBLIC_URL, \"/assets/images/icon/phone.png\"),\n        alt: \"Generic placeholder image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Contact Us\")), React.createElement(\"div\", {\n        class: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, contactDetails[country][0].ContactNumber))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"contact-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fa fa-map-marker\",\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Address\")), React.createElement(\"div\", {\n        class: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, contactDetails[country][0].Address))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"contact-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"\".concat(process.env.PUBLIC_URL, \"/assets/images/icon/email.png\"),\n        alt: \"Generic placeholder image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Address\")), React.createElement(\"div\", {\n        class: \"media-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, contactDetails[country][0].Email))))))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        class: \"theme-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"name\",\n        placeholder: \"Enter Your name\",\n        required: \"\",\n        name: \"FirstName\",\n        onChange: this.setStateFromInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), this.validator.message('FirstName', this.state.FirstName, 'required|alpha')), React.createElement(\"div\", {\n        class: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"last-name\",\n        placeholder: \"Email\",\n        required: \"\",\n        name: \"LastName\",\n        onChange: this.setStateFromInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), this.validator.message('LastName', this.state.LastName, 'required|alpha')), React.createElement(\"div\", {\n        class: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Phone number\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"review\",\n        placeholder: \"Enter your number\",\n        required: \"\",\n        name: \"Phone\",\n        onChange: this.setStateFromInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), this.validator.message('Phone', this.state.Phone, 'required|phone')), React.createElement(\"div\", {\n        class: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        id: \"email\",\n        name: \"Email\",\n        placeholder: \"Email\",\n        required: \"\",\n        onChange: this.setStateFromInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), this.validator.message('Email', this.state.Email, 'required|email')), React.createElement(\"div\", {\n        class: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"review\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Write Your Message\"), React.createElement(\"textarea\", {\n        class: \"form-control\",\n        placeholder: \"Write Your Message\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"6\",\n        name: \"Message\",\n        onChange: this.setStateFromInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), this.validator.message('Message', this.state.Message, 'required')), React.createElement(\"div\", {\n        class: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"btn btn-solid\",\n        onClick: function onClick() {\n          return _this2.SubmitContact();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Send Your Message\")))))))));\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contactDetails: state.data.contactDetails,\n    country: state.filters.country\n  };\n};\n\nexport default connect(mapStateToProps)(Contact);","map":{"version":3,"sources":["C:\\Users\\D8\\Desktop\\Cool and Cool Pakistan - Shop Online_files\\src\\components\\pages\\contact.jsx"],"names":["React","Component","connect","store","SimpleReactValidator","SendContact","getContactDetail","Contact","props","setStateFromInput","event","obj","target","name","value","setState","SubmitContact","validator","allValid","data","state","UserID","Message","FirstName","LastName","Phone","Email","dispatch","showMessages","forceUpdate","contactDetails","country","Location","process","env","PUBLIC_URL","ContactNumber","Address","message","mapStateToProps","filters"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport store from '../../store';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport {SendContact,getContactDetail} from '../../actions'\r\nclass Contact extends Component {\r\n\r\n    constructor (props) {\r\n        super (props)\r\n\r\n        this.state = {\r\n            \"FirstName\": '',\r\n            \"LastName\":'',\r\n            \"Phone\":'',\r\n            \"Email\":'',\r\n            \"Message\":'',\r\n            \"UserID\":''\r\n        }\r\n        this.validator = new SimpleReactValidator();\r\n        store.dispatch(getContactDetail());\r\n    }\r\n\r\n    setStateFromInput = (event) => {\r\n        var obj = {};\r\n        obj[event.target.name] = event.target.value;\r\n        this.setState(obj);\r\n\r\n    }\r\n\r\n    \r\n    SubmitContact = () => {\r\n        if (this.validator.allValid()) {\r\n         \r\n            var data = {\r\n\r\n                \"UserId\":this.state.UserID,\r\n                \"Message\":this.state.Message,\r\n                \"Name\": this.state.FirstName + this.state.LastName,\r\n                \"Phone\" : this.state.Phone, \r\n                \"Email\": this.state.Email    \r\n            };\r\n           \r\n            store.dispatch(SendContact(data));\r\n        }\r\n        else {\r\n            this.validator.showMessages();\r\n            // rerender to show messages for the first time\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        store.dispatch(getContactDetail());\r\n    }\r\n\r\n    render (){\r\n        const {contactDetails,country} = this.props;\r\n\r\n\r\n        return (\r\n            <div>\r\n                {/* <Breadcrumb title={'Contact Us'}/> */}\r\n                \r\n                \r\n                {/*Forget Password section*/}\r\n                <section class=\" contact-page section-b-space\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row section-b-space\">\r\n                            <div class=\"col-lg-7 map\">\r\n                                <iframe\r\n                                    src={contactDetails[country][0].Location}\r\n                                    allowFullScreen></iframe>\r\n                            </div>\r\n                            <div class=\"col-lg-5\">\r\n                                <div class=\"contact-right\">\r\n                                    <ul>\r\n                                        <li>\r\n                                            <div class=\"contact-icon\">\r\n                                                <img src={`${process.env.PUBLIC_URL}/assets/images/icon/phone.png`} alt=\"Generic placeholder image\" />\r\n                                                    <h6>Contact Us</h6>\r\n                                            </div>\r\n                                            <div class=\"media-body\">\r\n                                                <p>{contactDetails[country][0].ContactNumber}</p>\r\n                                              \r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div class=\"contact-icon\">\r\n                                                <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                                                <h6>Address</h6>\r\n                                            </div>\r\n                                            <div class=\"media-body\">\r\n                                                <p>{contactDetails[country][0].Address}</p>\r\n                                               \r\n                                            </div>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div class=\"contact-icon\">\r\n                                                <img src={`${process.env.PUBLIC_URL}/assets/images/icon/email.png`} alt=\"Generic placeholder image\" />\r\n                                                    <h6>Address</h6>\r\n                                            </div>\r\n                                            <div class=\"media-body\">\r\n                                            \r\n                                                <p>{contactDetails[country][0].Email}</p>\r\n                                        \r\n                                            </div>\r\n                                        </li>\r\n                                  \r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-sm-12\">\r\n                                <form class=\"theme-form\">\r\n                                    <div class=\"form-row\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <label htmlFor=\"name\">First Name</label>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"name\"\r\n                                                   placeholder=\"Enter Your name\" required=\"\" name=\"FirstName\" onChange={this.setStateFromInput} />\r\n                                                    {this.validator.message('FirstName', this.state.FirstName, 'required|alpha')}\r\n                                        </div>\r\n                                        <div class=\"col-md-6\">\r\n                                            <label htmlFor=\"email\">Last Name</label>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"last-name\"\r\n                                                   placeholder=\"Email\" required=\"\"  name=\"LastName\" onChange={this.setStateFromInput} />\r\n                                                   {this.validator.message('LastName', this.state.LastName, 'required|alpha')}\r\n                                        </div>\r\n                                        <div class=\"col-md-6\">\r\n                                            <label htmlFor=\"review\">Phone number</label>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"review\"\r\n                                                   placeholder=\"Enter your number\" required=\"\" name=\"Phone\"  onChange={this.setStateFromInput}/>\r\n                                                    {this.validator.message('Phone', this.state.Phone, 'required|phone')}\r\n                                        </div>\r\n                                        <div class=\"col-md-6\">\r\n                                            <label htmlFor=\"email\">Email</label>\r\n                                            <input type=\"text\" class=\"form-control\" id=\"email\" name=\"Email\"   placeholder=\"Email\"\r\n                                                   required=\"\" onChange={this.setStateFromInput}/>\r\n                                                     {this.validator.message('Email', this.state.Email, 'required|email')}\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <label htmlFor=\"review\">Write Your Message</label>\r\n                                            <textarea class=\"form-control\" placeholder=\"Write Your Message\"\r\n                                                      id=\"exampleFormControlTextarea1\" rows=\"6\"   name=\"Message\"   onChange={this.setStateFromInput}></textarea>\r\n                                             {this.validator.message('Message', this.state.Message, 'required')}\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <a class=\"btn btn-solid\" onClick={() => this.SubmitContact()}>Send Your Message</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contactDetails: state.data.contactDetails,\r\n    country: state.filters.country  \r\n})\r\n\r\nexport default  connect(mapStateToProps)(Contact);"]},"metadata":{},"sourceType":"module"}