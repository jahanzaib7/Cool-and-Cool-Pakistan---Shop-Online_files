{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\D8\\\\Desktop\\\\Cool and Cool Pakistan - Shop Online_files\\\\src\\\\components\\\\common\\\\headers\\\\header-three.jsx\";\nimport React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { IntlActions } from 'react-redux-multilingual';\nimport Pace from 'react-pace-progress'; // Import custom components\n\nimport store from '../../../store';\nimport NavBar from \"./common/navbar\";\nimport SideBar from \"./common/sidebar\";\nimport CartContainer from \"./../../../containers/CartContainer\";\nimport MobCartContainer from \"./../../../containers/MobCartContainer\";\nimport TopBarDark from \"./common/topbar-dark\";\nimport { filterCountry, changeCurrency, fetchMenu, getAllProducts, fetchImages, recieveHomeBanner, fetchHomeBanner, fetchFAQ, fetchOrigin, getDeals, getStoreSetting, getPrivatePolicy, getSocialLink, getDealsBanner, getContactDetail, fetchSideDetails, clearCart } from '../../../actions';\nimport { connect } from \"react-redux\";\nimport LogoImage from \"./common/logo\";\nimport LogoBlock from \"../../layouts/common/logo-block\";\nimport Autosuggest from 'react-autosuggest';\nimport Swal from 'sweetalert2';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport NavBarMob from \"./common/navbar-mob\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Header2 from './header2'; // When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\n\nvar getSuggestionValue = function getSuggestionValue(suggestion) {\n  return suggestion.name;\n}; // Use your imagination to render suggestions.\n\n\nvar renderSuggestion = function renderSuggestion(suggestion) {\n  if (suggestion.hasOwnProperty(\"DOTD\")) {\n    return React.createElement(Link, {\n      to: \"/deals/product/\".concat(encodeURI(suggestion.name)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-3 m-0 p-0 form-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(LazyLoadImage, {\n      effect: \"blur\",\n      src: suggestion.pictures[0],\n      class: \"img-fluid\",\n      style: {\n        margin: ' 0 auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-sm-9 form-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, suggestion.name)));\n  } else {\n    return React.createElement(Link, {\n      to: \"/product/product/\".concat(encodeURI(suggestion.name)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-sm-3 m-0 p-0 form-inline \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(LazyLoadImage, {\n      effect: \"blur\",\n      src: suggestion.pictures[0],\n      class: \"img-fluid\",\n      style: {\n        margin: ' 0 auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"col-sm-9 form-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, suggestion.name)));\n  }\n};\n\nvar HeaderThree =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HeaderThree, _Component);\n\n  function HeaderThree(props) {\n    var _this;\n\n    _classCallCheck(this, HeaderThree);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HeaderThree).call(this, props));\n\n    _this.getSuggestions = function (value) {\n      var inputValue = value.trim().toLowerCase();\n\n      var dataArray = _this.props.products.concat(_this.props.deals);\n\n      var inputLength = inputValue.length;\n      return inputLength === 0 ? [] : dataArray.filter(function (lang) {\n        return lang.name.toLowerCase().includes(inputValue) && _this.props.country === lang.country;\n      });\n    };\n\n    _this.handleScroll = function () {// let number = window.pageXOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n      // if (number >= 300) {\n      //     if (window.innerWidth < 576) {\n      //         document.getElementById(\"sticky\").classList.remove('fixed');\n      //     }else\n      //         document.getElementById(\"sticky\").classList.add('fixed');\n      // } else {\n      //     document.getElementById(\"sticky\").classList.remove('fixed');\n      // }\n    };\n\n    _this.load = function () {\n      _this.setState({\n        isLoading: true\n      });\n\n      fetch().then(function () {\n        // deal with data fetched\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    _this.setStateFromInput = function (event) {\n      var obj = {};\n      obj[event.target.name] = event.target.value;\n\n      _this.setState(obj);\n    };\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue,\n        searchTerm: newValue\n      });\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: _this.getSuggestions(value)\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.state = {\n      isLoading: false,\n      searchTerm: '',\n      value: '',\n      suggestions: []\n    };\n    return _this;\n  } // Teach Autosuggest how to calculate suggestions for any given input value.\n\n\n  _createClass(HeaderThree, [{\n    key: \"componentDidMount\",\n\n    /*=====================\r\n         Pre loader\r\n         ==========================*/\n    value: function componentDidMount() {\n      setTimeout(function () {\n        document.querySelector(\".loader-wrapper\").style = \"display: none\";\n      }, 2000);\n      store.dispatch(fetchOrigin());\n      store.dispatch(fetchMenu());\n      store.dispatch(fetchImages());\n      store.dispatch(fetchHomeBanner());\n      store.dispatch(fetchFAQ());\n      store.dispatch(getAllProducts());\n      store.dispatch(getDeals());\n      store.dispatch(getStoreSetting());\n      store.dispatch(getPrivatePolicy());\n      store.dispatch(getSocialLink());\n      store.dispatch(getDealsBanner());\n      store.dispatch(getContactDetail());\n      store.dispatch(fetchSideDetails());\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(lang) {\n      store.dispatch(IntlActions.setLocale(lang));\n    }\n  }, {\n    key: \"changedata\",\n    value: function changedata(country, symbol) {\n      var _this2 = this;\n\n      this.props.cartList.length > 0 ? Swal.fire({\n        title: 'Changing country will empty your cart',\n        text: \"Are you sure you want to change country?\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes'\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          _this2.props.filterCountry(country);\n\n          _this2.props.changeCurrency(symbol);\n\n          store.dispatch(clearCart([]));\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'Coutry Changed!',\n            showConfirmButton: false,\n            toast: true,\n            timer: 1500\n          });\n        }\n      }) : function () {\n        _this2.props.filterCountry(country);\n\n        _this2.props.changeCurrency(symbol);\n      }();\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"openNav\",\n    value: function openNav() {\n      var openmyslide = document.getElementById(\"mySidenav\");\n\n      if (openmyslide) {\n        openmyslide.classList.add('open-side');\n      }\n    }\n  }, {\n    key: \"openSearch\",\n    value: function openSearch() {\n      document.getElementById(\"search-overlay\").style.display = \"block\";\n    }\n  }, {\n    key: \"closeSearch\",\n    value: function closeSearch() {\n      document.getElementById(\"search-overlay\").style.display = \"none\";\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevprops, prevstate) {\n      if (prevstate.searchTerm !== this.state.searchTerm) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var user = this.props.user;\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions; // Autosuggest will pass through all these props to the input.\n\n      var inputProps = {\n        placeholder: 'Search products.......',\n        value: value,\n        onChange: this.onChange\n      };\n\n      var handleSubmit =\n      /*#__PURE__*/\n      function () {\n        var _ref3 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(event) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  event.preventDefault(); // custSignIn(formData);\n\n                  _this3.props.history.push({\n                    pathname: '/Search',\n                    state: {\n                      searchTerm: _this3.state.searchTerm\n                    }\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function handleSubmit(_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), React.createElement(Header2, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return HeaderThree;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user.user,\n    products: state.data.products,\n    country: state.filters.country,\n    cartList: state.cartList.cart,\n    deals: state.data.deals\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterCountry: filterCountry,\n  changeCurrency: changeCurrency\n})(HeaderThree);","map":{"version":3,"sources":["C:\\Users\\D8\\Desktop\\Cool and Cool Pakistan - Shop Online_files\\src\\components\\common\\headers\\header-three.jsx"],"names":["React","Component","Link","NavLink","IntlActions","Pace","store","NavBar","SideBar","CartContainer","MobCartContainer","TopBarDark","filterCountry","changeCurrency","fetchMenu","getAllProducts","fetchImages","recieveHomeBanner","fetchHomeBanner","fetchFAQ","fetchOrigin","getDeals","getStoreSetting","getPrivatePolicy","getSocialLink","getDealsBanner","getContactDetail","fetchSideDetails","clearCart","connect","LogoImage","LogoBlock","Autosuggest","Swal","ToastContainer","toast","LazyLoadImage","NavBarMob","Navbar","Header2","getSuggestionValue","suggestion","name","renderSuggestion","hasOwnProperty","encodeURI","pictures","margin","HeaderThree","props","getSuggestions","value","inputValue","trim","toLowerCase","dataArray","products","concat","deals","inputLength","length","filter","lang","includes","country","handleScroll","load","setState","isLoading","fetch","then","setStateFromInput","event","obj","target","onChange","newValue","searchTerm","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","setTimeout","document","querySelector","style","dispatch","window","addEventListener","removeEventListener","setLocale","symbol","cartList","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","position","showConfirmButton","timer","history","push","openmyslide","getElementById","classList","add","display","prevprops","prevstate","user","inputProps","placeholder","handleSubmit","preventDefault","pathname","mapStateToProps","data","filters","cart"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,QAA6B,kBAA7B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,IAAP,MAAiB,qBAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAAQC,aAAR,EACQC,cADR,EAEQC,SAFR,EAGQC,cAHR,EAIQC,WAJR,EAKOC,iBALP,EAMOC,eANP,EAOOC,QAPP,EAQOC,WARP,EASOC,QATP,EAUOC,eAVP,EAWOC,gBAXP,EAYOC,aAZP,EAaOC,cAbP,EAcOC,gBAdP,EAeOC,gBAfP,EAewBC,SAfxB,QAgBW,kBAhBX;AAiBA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AAEA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAO,sDAAP;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEI;AACA;AACA;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,UAAU;AAAA,SAAIA,UAAU,CAACC,IAAf;AAAA,CAArC,C,CAEA;;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAF,UAAU,EAAI;AACnC,MAAGA,UAAU,CAACG,cAAX,CAA0B,MAA1B,CAAH,EAAqC;AAC7C,WAAW,oBAAC,IAAD;AAAM,MAAA,EAAE,2BAAoBC,SAAS,CAACJ,UAAU,CAACC,IAAZ,CAA7B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACX;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,+BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,aAAD;AACA,MAAA,MAAM,EAAC,MADP;AAEA,MAAA,GAAG,EAAED,UAAU,CAACK,QAAX,CAAoB,CAApB,CAFL;AAGI,MAAA,KAAK,EAAC,WAHV;AAII,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,EAWI;AAAK,MAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,UAAU,CAACC,IADhB,CAXJ,CADW,CAAX;AAiBS,GAlBD,MAkBK;AACD,WAAW,oBAAC,IAAD;AAAM,MAAA,EAAE,6BAAsBG,SAAS,CAACJ,UAAU,CAACC,IAAZ,CAA/B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACvB;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,+BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,aAAD;AACA,MAAA,MAAM,EAAC,MADP;AAEA,MAAA,GAAG,EAAED,UAAU,CAACK,QAAX,CAAoB,CAApB,CAFL;AAGI,MAAA,KAAK,EAAC,WAHV;AAII,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,EAWI;AAAK,MAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,UAAU,CAACC,IADhB,CAXJ,CADuB,CAAX;AAkBH;AAEJ,CAxCD;;IA+CEM,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAanBC,cAbmB,GAaF,UAAAC,KAAK,EAAI;AAClB,UAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,GAAaC,WAAb,EAAnB;;AACA,UAAIC,SAAS,GAAG,MAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAApB,CAA2B,MAAKR,KAAL,CAAWS,KAAtC,CAAhB;;AACA,UAAMC,WAAW,GAAGP,UAAU,CAACQ,MAA/B;AACA,aAAOD,WAAW,KAAK,CAAhB,GAAoB,EAApB,GAAyBJ,SAAS,CAACM,MAAV,CAAiB,UAAAC,IAAI;AAAA,eACjDA,IAAI,CAACpB,IAAL,CAAUY,WAAV,GAAwBS,QAAxB,CAAiCX,UAAjC,KAAgD,MAAKH,KAAL,CAAWe,OAAX,KAAuBF,IAAI,CAACE,OAD3B;AAAA,OAArB,CAAhC;AAGH,KApBc;;AAAA,UAuDnBC,YAvDmB,GAuDJ,YAAM,CACjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAlEkB;;AAAA,UAsHnBC,IAtHmB,GAsHZ,YAAI;AAEP,YAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAd;;AACAC,MAAAA,KAAK,GAAGC,IAAR,CAAa,YAAI;AACb;AACA,cAAKH,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACH,OAHD;AAIH,KA7HkB;;AAAA,UA8HnBG,iBA9HmB,GA8HC,UAACC,KAAD,EAAW;AAC3B,UAAIC,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACD,KAAK,CAACE,MAAN,CAAahC,IAAd,CAAH,GAAyB8B,KAAK,CAACE,MAAN,CAAavB,KAAtC;;AACA,YAAKgB,QAAL,CAAcM,GAAd;AAED,KAnIgB;;AAAA,UA6InBE,QA7ImB,GA6IR,UAACH,KAAD,QAAyB;AAAA,UAAfI,QAAe,QAAfA,QAAe;;AAChC,YAAKT,QAAL,CAAc;AACZhB,QAAAA,KAAK,EAAEyB,QADK;AAEZC,QAAAA,UAAU,EAACD;AAFC,OAAd;AAID,KAlJgB;;AAAA,UAsJrBE,2BAtJqB,GAsJS,iBAAe;AAAA,UAAZ3B,KAAY,SAAZA,KAAY;;AAC3C,YAAKgB,QAAL,CAAc;AACZY,QAAAA,WAAW,EAAE,MAAK7B,cAAL,CAAoBC,KAApB;AADD,OAAd;AAGD,KA1JoB;;AAAA,UA6JrB6B,2BA7JqB,GA6JS,YAAM;AAClC,YAAKb,QAAL,CAAc;AACZY,QAAAA,WAAW,EAAE;AADD,OAAd;AAGD,KAjKoB;;AAGf,UAAKE,KAAL,GAAa;AACTb,MAAAA,SAAS,EAAC,KADD;AAETS,MAAAA,UAAU,EAAC,EAFF;AAGT1B,MAAAA,KAAK,EAAE,EAHE;AAIT4B,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAHe;AASlB,G,CAGG;;;;;;AAUJ;;;wCAGoB;AAChBG,MAAAA,UAAU,CAAC,YAAW;AAClBC,QAAAA,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,EAA0CC,KAA1C,GAAiD,eAAjD;AACH,OAFS,EAEP,IAFO,CAAV;AAIA/E,MAAAA,KAAK,CAACgF,QAAN,CAAelE,WAAW,EAA1B;AACAd,MAAAA,KAAK,CAACgF,QAAN,CAAexE,SAAS,EAAxB;AACAR,MAAAA,KAAK,CAACgF,QAAN,CAAetE,WAAW,EAA1B;AACAV,MAAAA,KAAK,CAACgF,QAAN,CAAepE,eAAe,EAA9B;AACAZ,MAAAA,KAAK,CAACgF,QAAN,CAAenE,QAAQ,EAAvB;AACAb,MAAAA,KAAK,CAACgF,QAAN,CAAevE,cAAc,EAA7B;AACAT,MAAAA,KAAK,CAACgF,QAAN,CAAejE,QAAQ,EAAvB;AACAf,MAAAA,KAAK,CAACgF,QAAN,CAAehE,eAAe,EAA9B;AACAhB,MAAAA,KAAK,CAACgF,QAAN,CAAe/D,gBAAgB,EAA/B;AACAjB,MAAAA,KAAK,CAACgF,QAAN,CAAe9D,aAAa,EAA5B;AACAlB,MAAAA,KAAK,CAACgF,QAAN,CAAe7D,cAAc,EAA7B;AACAnB,MAAAA,KAAK,CAACgF,QAAN,CAAe5D,gBAAgB,EAA/B;AACApB,MAAAA,KAAK,CAACgF,QAAN,CAAe3D,gBAAgB,EAA/B;AAEH;;;yCAGmB;AAChB4D,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKvB,YAAvC;AAEH;;;2CACsB;AACnBsB,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqC,KAAKxB,YAA1C;AACH;;;mCAecH,I,EAAM;AACjBxD,MAAAA,KAAK,CAACgF,QAAN,CAAelF,WAAW,CAACsF,SAAZ,CAAsB5B,IAAtB,CAAf;AACH;;;+BACUE,O,EAAQ2B,M,EAAO;AAAA;;AACrB,WAAK1C,KAAL,CAAW2C,QAAX,CAAoBhC,MAApB,GAA6B,CAA9B,GACA3B,IAAI,CAAC4D,IAAL,CAAU;AACNC,QAAAA,KAAK,EAAE,uCADD;AAENC,QAAAA,IAAI,EAAE,0CAFA;AAGNC,QAAAA,IAAI,EAAE,SAHA;AAINC,QAAAA,gBAAgB,EAAE,IAJZ;AAKNC,QAAAA,kBAAkB,EAAE,SALd;AAMNC,QAAAA,iBAAiB,EAAE,MANb;AAONC,QAAAA,iBAAiB,EAAE;AAPb,OAAV,EAQK9B,IARL,CAQU,UAAC+B,MAAD,EAAY;AAClB,YAAIA,MAAM,CAACC,WAAX,EAAwB;AACpB,UAAA,MAAI,CAACrD,KAAL,CAAWrC,aAAX,CAAyBoD,OAAzB;;AACA,UAAA,MAAI,CAACf,KAAL,CAAWpC,cAAX,CAA0B8E,MAA1B;;AACArF,UAAAA,KAAK,CAACgF,QAAN,CAAe1D,SAAS,CAAC,EAAD,CAAxB;AACIK,UAAAA,IAAI,CAAC4D,IAAL,CAAU;AACNU,YAAAA,QAAQ,EAAE,SADJ;AAENP,YAAAA,IAAI,EAAE,SAFA;AAGNF,YAAAA,KAAK,EAAE,iBAHD;AAINU,YAAAA,iBAAiB,EAAE,KAJb;AAKNrE,YAAAA,KAAK,EAAE,IALD;AAONsE,YAAAA,KAAK,EAAE;AAPD,WAAV;AASP;AACF,OAvBH,CADA,GAyBK,YAAM;AACP,QAAA,MAAI,CAACxD,KAAL,CAAWrC,aAAX,CAAyBoD,OAAzB;;AACA,QAAA,MAAI,CAACf,KAAL,CAAWpC,cAAX,CAA0B8E,MAA1B;AACD,OAHC,EAzBJ;AA6BJ,WAAK1C,KAAL,CAAWyD,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AAEC;;;8BACS;AACN,UAAIC,WAAW,GAAGzB,QAAQ,CAAC0B,cAAT,CAAwB,WAAxB,CAAlB;;AACA,UAAGD,WAAH,EAAe;AACXA,QAAAA,WAAW,CAACE,SAAZ,CAAsBC,GAAtB,CAA0B,WAA1B;AACH;AACJ;;;iCACY;AACT5B,MAAAA,QAAQ,CAAC0B,cAAT,CAAwB,gBAAxB,EAA0CxB,KAA1C,CAAgD2B,OAAhD,GAA0D,OAA1D;AACH;;;kCAEa;AACV7B,MAAAA,QAAQ,CAAC0B,cAAT,CAAwB,gBAAxB,EAA0CxB,KAA1C,CAAgD2B,OAAhD,GAA0D,MAA1D;AACH;;;uCAiBkBC,S,EAAUC,S,EAAU;AAEtC,UAAIA,SAAS,CAACrC,UAAV,KAAyB,KAAKI,KAAL,CAAWJ,UAAxC,EAAmD,CAElD;AAED;;;6BA0BQ;AAAA;;AAAA,UACCsC,IADD,GACS,KAAKlE,KADd,CACCkE,IADD;AAAA,wBAE0B,KAAKlC,KAF/B;AAAA,UAEG9B,KAFH,eAEGA,KAFH;AAAA,UAEU4B,WAFV,eAEUA,WAFV,EAGF;;AACH,UAAMqC,UAAU,GAAG;AACfC,QAAAA,WAAW,EAAE,wBADE;AAEflE,QAAAA,KAAK,EAALA,KAFe;AAGfwB,QAAAA,QAAQ,EAAE,KAAKA;AAHA,OAAnB;;AAKA,UAAM2C,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAG,iBAAM9C,KAAN;AAAA;AAAA;AAAA;AAAA;AACjBA,kBAAAA,KAAK,CAAC+C,cAAN,GADiB,CAEjB;;AAGA,kBAAA,MAAI,CAACtE,KAAL,CAAWyD,OAAX,CAAmBC,IAAnB,CAAwB;AACpBa,oBAAAA,QAAQ,EAAE,SADU;AAEhBvC,oBAAAA,KAAK,EAAE;AAACJ,sBAAAA,UAAU,EAAC,MAAI,CAACI,KAAL,CAAWJ;AAAvB;AAFS,mBAAxB;;AALiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAZyC,YAAY;AAAA;AAAA;AAAA,SAAlB;;AAeA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAYH;;;;EA3MqBrH,S;;AA6M1B,IAAMwH,eAAe,GAAG,SAAlBA,eAAkB,CAACxC,KAAD;AAAA,SAAY;AAChCkC,IAAAA,IAAI,EAAElC,KAAK,CAACkC,IAAN,CAAWA,IADe;AAEhC3D,IAAAA,QAAQ,EAAEyB,KAAK,CAACyC,IAAN,CAAWlE,QAFW;AAGhCQ,IAAAA,OAAO,EAACiB,KAAK,CAAC0C,OAAN,CAAc3D,OAHU;AAIhC4B,IAAAA,QAAQ,EAACX,KAAK,CAACW,QAAN,CAAegC,IAJQ;AAKhClE,IAAAA,KAAK,EAAEuB,KAAK,CAACyC,IAAN,CAAWhE;AALc,GAAZ;AAAA,CAAxB;;AAQA,eAAe7B,OAAO,CAAC4F,eAAD,EAClB;AAAE7G,EAAAA,aAAa,EAAbA,aAAF;AAAgBC,EAAAA,cAAc,EAAdA;AAAhB,CADkB,CAAP,CAEbmC,WAFa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, NavLink} from 'react-router-dom';\r\nimport { IntlActions } from 'react-redux-multilingual'\r\nimport Pace from 'react-pace-progress'\r\n\r\n// Import custom components\r\nimport store from '../../../store';\r\nimport NavBar from \"./common/navbar\";\r\nimport SideBar from \"./common/sidebar\";\r\nimport CartContainer from \"./../../../containers/CartContainer\";\r\nimport MobCartContainer from \"./../../../containers/MobCartContainer\";\r\nimport TopBarDark from \"./common/topbar-dark\";\r\nimport {filterCountry,\r\n        changeCurrency,\r\n        fetchMenu,\r\n        getAllProducts ,\r\n        fetchImages,\r\n       recieveHomeBanner,\r\n       fetchHomeBanner,\r\n       fetchFAQ,\r\n       fetchOrigin,\r\n       getDeals,\r\n       getStoreSetting,\r\n       getPrivatePolicy,\r\n       getSocialLink,\r\n       getDealsBanner ,\r\n       getContactDetail,\r\n       fetchSideDetails,clearCart\r\n    } from '../../../actions'\r\nimport {connect} from \"react-redux\";\r\nimport LogoImage from \"./common/logo\";\r\nimport LogoBlock from \"../../layouts/common/logo-block\"\r\nimport Autosuggest from 'react-autosuggest';\r\nimport Swal from 'sweetalert2'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nimport NavBarMob from \"./common/navbar-mob\";\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Header2 from './header2';\r\n\r\n    // When suggestion is clicked, Autosuggest needs to populate the input\r\n    // based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n    // input value for every given suggestion.\r\n    const getSuggestionValue = suggestion => suggestion.name;\r\n    \r\n    // Use your imagination to render suggestions.\r\n    const renderSuggestion = suggestion => {\r\n        if(suggestion.hasOwnProperty(\"DOTD\")){\r\nreturn     <Link to={`/deals/product/${encodeURI(suggestion.name)}`}>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3 m-0 p-0 form-inline \">\r\n    <LazyLoadImage\r\n    effect=\"blur\"\r\n    src={suggestion.pictures[0]}\r\n        class=\"img-fluid\" \r\n        style={{margin:' 0 auto'}}\r\n    />\r\n\r\n    \r\n    </div>\r\n    <div class=\"col-sm-9 form-inline\">\r\n        {suggestion.name}\r\n    </div>\r\n</div>\r\n</Link> ;\r\n        }else{\r\n            return     <Link to={`/product/product/${encodeURI(suggestion.name)}`}>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-3 m-0 p-0 form-inline \">\r\n    <LazyLoadImage\r\n    effect=\"blur\"\r\n    src={suggestion.pictures[0]}\r\n        class=\"img-fluid\" \r\n        style={{margin:' 0 auto'}}\r\n    />\r\n\r\n    \r\n    </div>\r\n    <div class=\"col-sm-9 form-inline\">\r\n        {suggestion.name}\r\n    </div>\r\n</div>\r\n</Link> ;\r\n            \r\n        }\r\n\r\n    }\r\n\r\n \r\n\r\n\r\n\r\n\r\nclass HeaderThree extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading:false,\r\n            searchTerm:'',\r\n            value: '',\r\n            suggestions: []\r\n        }\r\n    }\r\n\r\n\r\n        // Teach Autosuggest how to calculate suggestions for any given input value.\r\n    getSuggestions = value => {\r\n            const inputValue = value.trim().toLowerCase();\r\n            let dataArray = this.props.products.concat(this.props.deals);\r\n            const inputLength = inputValue.length;\r\n            return inputLength === 0 ? [] : dataArray.filter(lang =>\r\n                lang.name.toLowerCase().includes(inputValue) && this.props.country === lang.country\r\n            );\r\n        };\r\n        \r\n    /*=====================\r\n         Pre loader\r\n         ==========================*/\r\n    componentDidMount() {\r\n        setTimeout(function() {\r\n            document.querySelector(\".loader-wrapper\").style= \"display: none\";\r\n        }, 2000);\r\n      \r\n        store.dispatch(fetchOrigin());\r\n        store.dispatch(fetchMenu());\r\n        store.dispatch(fetchImages());\r\n        store.dispatch(fetchHomeBanner());\r\n        store.dispatch(fetchFAQ());\r\n        store.dispatch(getAllProducts());\r\n        store.dispatch(getDeals());\r\n        store.dispatch(getStoreSetting());\r\n        store.dispatch(getPrivatePolicy());\r\n        store.dispatch(getSocialLink());\r\n        store.dispatch(getDealsBanner());\r\n        store.dispatch(getContactDetail());\r\n        store.dispatch(fetchSideDetails());\r\n    \r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    \r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll = () => {\r\n        // let number = window.pageXOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n\r\n        // if (number >= 300) {\r\n        //     if (window.innerWidth < 576) {\r\n        //         document.getElementById(\"sticky\").classList.remove('fixed');\r\n        //     }else\r\n        //         document.getElementById(\"sticky\").classList.add('fixed');\r\n        // } else {\r\n        //     document.getElementById(\"sticky\").classList.remove('fixed');\r\n        // }\r\n    }\r\n\r\n    changeLanguage(lang) {\r\n        store.dispatch(IntlActions.setLocale(lang))\r\n    }\r\n    changedata(country,symbol){\r\n        (this.props.cartList.length > 0) ?\r\n        Swal.fire({\r\n            title: 'Changing country will empty your cart',\r\n            text: \"Are you sure you want to change country?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                this.props.filterCountry(country);\r\n                this.props.changeCurrency(symbol);\r\n                store.dispatch(clearCart([]));\r\n                    Swal.fire({\r\n                        position: 'top-end',\r\n                        icon: 'success',\r\n                        title: 'Coutry Changed!',\r\n                        showConfirmButton: false,\r\n                        toast: true,\r\n                        \r\n                        timer: 1500\r\n                    })\r\n            }\r\n          }) \r\n          : (() => {\r\n            this.props.filterCountry(country);\r\n            this.props.changeCurrency(symbol);\r\n          })();\r\n    this.props.history.push('/')\r\n\r\n    }\r\n    openNav() {\r\n        var openmyslide = document.getElementById(\"mySidenav\");\r\n        if(openmyslide){\r\n            openmyslide.classList.add('open-side')\r\n        }\r\n    }\r\n    openSearch() {\r\n        document.getElementById(\"search-overlay\").style.display = \"block\";\r\n    }\r\n\r\n    closeSearch() {\r\n        document.getElementById(\"search-overlay\").style.display = \"none\";\r\n    }\r\n\r\n    load = ()=>{\r\n     \r\n        this.setState({isLoading: true});\r\n        fetch().then(()=>{\r\n            // deal with data fetched\r\n            this.setState({isLoading: false})\r\n        })\r\n    };\r\n    setStateFromInput = (event) => {\r\n        var obj = {};\r\n        obj[event.target.name] = event.target.value;\r\n        this.setState(obj);\r\n\r\n      };\r\n\r\n    componentDidUpdate(prevprops,prevstate){\r\n  \r\n     if( prevstate.searchTerm !== this.state.searchTerm){\r\n      \r\n     }\r\n        \r\n    }\r\n \r\n    onChange = (event, { newValue }) => {\r\n        this.setState({\r\n          value: newValue,\r\n          searchTerm:newValue\r\n        });\r\n      };\r\n\r\n      // Autosuggest will call this function every time you need to update suggestions.\r\n  // You already implemented this logic above, so just use it.\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: this.getSuggestions(value)\r\n    });\r\n  };\r\n\r\n  // Autosuggest will call this function every time you need to clear suggestions.\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  };\r\n\r\n\r\n\r\n    render() {\r\n        const{user} = this.props;\r\n        const { value, suggestions } = this.state;\r\n           // Autosuggest will pass through all these props to the input.\r\n        const inputProps = {\r\n            placeholder: 'Search products.......',\r\n            value,\r\n            onChange: this.onChange\r\n        };\r\n        const handleSubmit = async event => {\r\n            event.preventDefault();\r\n            // custSignIn(formData);\r\n           \r\n        \r\n            this.props.history.push({\r\n                pathname: '/Search',\r\n                    state: {searchTerm:this.state.searchTerm}\r\n            });\r\n        \r\n          }\r\n\r\n          \r\n\r\n\r\n        return (\r\n            <div>\r\n                 <ToastContainer />\r\n                <Header2/>\r\n\r\n                                    {/* {this.state.isLoading ? <Pace color=\"#27ae60\"/> : null} */}\r\n                 \r\n                    {/*Top Header Component*/}\r\n                    \r\n                </div>\r\n              \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user.user,\r\n    products :state.data.products,\r\n    country:state.filters.country,\r\n    cartList:state.cartList.cart,\r\n    deals :state.data.deals\r\n    \r\n});\r\nexport default connect(mapStateToProps,\r\n    { filterCountry,changeCurrency }\r\n)(HeaderThree);"]},"metadata":{},"sourceType":"module"}